{
	/*
		// Place your snippets for Javascript (Babel) here. Each snippet is defined under a snippet name and has a prefix, body and
		// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
		// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
		// same ids are connected.
		// Example:
		"Print to console": {
			"scope": "javascript,typescript, html, vue",
			"prefix": "log",
			"body": [
				"console.log('$1');",
				"$2"
			],
			"description": "Log output to console"
		}
	*/
	"var vname = val": {
		"prefix": "v=",
		"body": [
			"var $1 = $2"
		]
	},
	"const cname = val": {
		"prefix": "c=",
		"body": [
			"const $1 = $2",
		],
		"description": "Declare variable~"
	},
	"var m = require(module)": {
		"prefix": "vr",
		"body": [
			"var $1 = require('$2');",
			"$3"
		],
		"description": "Log output to console"
	},
	"const cm = require(module)": {
		"prefix": "cr",
		"body": [
			"const $1 = require('$2')",
		],
		"description": "Import requirements~"
	},
	"function fname(){": {
		"prefix": "fnn",
		"body": [
			"function $1 ($2) {",
			"  $3",
			"}"
		]
	},
	"function (varr)": {
		"prefix": "fn",
		"body": [
			"function ($1) {",
			"    $2",
			"}"
		]
	},
	"(varr) => {": {
		"prefix": "ff",
		"body": [
			"($1) => {",
			"    $2",
			"}"
		]
	},
	"console.log": {
		"prefix": "clog",
		"body": [
			"console.log($1)$2",
		],
		"description": "shotcut"
	},
	"heya---": {
		"prefix": "heya",
		"body": [
			"console.log('heya----------');",
		],
		"description": "heya---"
	},
	"---yahe": {
		"prefix": "yahe",
		"body": [
			"console.log('----------yahe');",
		],
		"description": "---yahe"
	},
	"module.exports=": {
		"prefix": "me",
		"body": [
			"module.exports={$1};",
		],
		"description": "standard export"
	},
	"export api": {
		"prefix": "efn",
		"body": [
			"export function get$1Const () {",
			"  return api.get('$2')",
			"}",
		],
		"description": "Exports api function"
	},
	"on(ename, handler)": {
		"prefix": "on",
		"body": [
			"$1.on($2, $3)"
		]
	},
	"eventEmiter.on(ename, handler)": {
		"prefix": "eeon",
		"body": [
			"eventEmiter.on($1, $2)"
		]
	},
	"eventEmiter.emit(ename)": {
		"prefix": "eee",
		"body": [
			"eventEmiter.emit($1)$2"
		]
	},
	"<temp...<script...<style": {
		"prefix": "vtemp",
		"body": [
			"<template>",
			"  $1",
			"</template>",
			"",
			"<script>",
			"  export default {",
			"    name: '',",
			"    props: {",
			"      ",
			"    },",
			"    data() {",
			"      return {",
			"        ",
			"      }",
			"    },",
			"    computed: {",
			"      ",
			"    },",
			"    watch: {",
			"      ",
			"    },",
			"    methods: {",
			"      ",
			"    },",
			"  }",
			"</script>",
			"<style>",
			"  ",
			"</style>"
		]
	},
	"<temp...": {
		"prefix": "temp",
		"body": [
			"<template lang=\"html\">",
			"  $1",
			"</template>"
		]
	},
	"debugger": {
		"prefix": "deb",
		"body": [
			"debugger"
		]
	},
	"() => {}": {
		"prefix": "fi",
		"body": [
			"($1) => {$2}"
		]
	},
	"($1) => {}": {
		"prefix": "lam",
		"body": [
			"($1) => {$2}"
		]
	},
	/* html */
	"console.log": {
		"prefix": "clog",
		"body": [
			"console.log('$1')$2",
		],
		"description": "shotcut"
	},
	"heya": {
		"prefix": "heya",
		"body": [
			"console.log('heya----------');",
		],
		"description": "heya---"
	},
	"yahe": {
		"prefix": "yahe",
		"body": [
			"console.log('----------yahe');",
		],
		"description": "---yahe"
	},
	"document.get": {
		"prefix": "docgetid",
		"body": [
			"document.getElementById",
		],
		"description": "document methods"
	},
	"doc.getElem": {
		"prefix": "dgetid",
		"body": [
			"document.getElementById($1)",
		],
		"description": "document methods"
	},
	"doc.createElm": {
		"prefix": "dcreate",
		"body": [
			"document.createElement($1);",
		],
		"description": "document methods"
	}

}